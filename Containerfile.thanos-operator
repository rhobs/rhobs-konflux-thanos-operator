# Build the manager binary
FROM brew.registry.redhat.io/rh-osbs/openshift-golang-builder:rhel_9_golang_1.24 as builder
ARG TARGETOS
ARG TARGETARCH

WORKDIR /workspace

  # Copy the Go Modules manifests
COPY thanos-operator/go.mod go.mod
COPY thanos-operator/go.sum go.sum

ENV GOFLAGS='-mod=mod'
  # cache deps before building and copying source so that we don't need to re-download as much
  # and so that source changes don't invalidate our downloaded layer
RUN go mod download

  # Copy the go source
COPY thanos-operator/LICENSE LICENSE
COPY thanos-operator/cmd/main.go cmd/main.go
COPY thanos-operator/api/ api/
COPY thanos-operator/internal/controller/ internal/controller/
COPY thanos-operator/internal/pkg/ internal/pkg/

  # Build
  # the GOARCH has not a default value to allow the binary be built according to the host where the command
  # was called. For example, if we call make docker-build in a local env which has the Apple Silicon M1 SO
  # the docker BUILDPLATFORM arg will be linux/arm64 when for Apple x86 it will be linux/amd64. Therefore,
  # by leaving it empty we can ensure that the container and binary shipped on it will have the same platform.
RUN CGO_ENABLED=0 GOOS=${TARGETOS:-linux} GOARCH=${TARGETARCH} go build -a -o manager cmd/main.go

  # Use distroless as minimal base image to package the manager binary
  # Refer to https://github.com/GoogleContainerTools/distroless for more details
FROM registry.access.redhat.com/ubi9/ubi-minimal:latest
WORKDIR /

COPY --from=builder /workspace/manager .
COPY --from=builder /workspace/LICENSE licenses/LICENSE

USER 65532:65532

ENTRYPOINT ["/manager"]

ARG VERSION

LABEL org.label-schema.vendor="Red Hat" \
  vendor="Red Hat, Inc." \
  com.redhat.component="rhobs-thanos-operator" \
  name="thanos-operator" \
  maintainer="team-monitoring@redhat.com" \
  version="$VERSION" \
  release="$VERSION" \
  description="The Thanos Operator provides Kubernetes native deployment and management of Thanos components. The purpose of this project is to simplify and automate the configuration of a Thanos based monitoring stack that would work across different topologies and deployment modes." \
  summary="Operator to manage Thanos installations"
